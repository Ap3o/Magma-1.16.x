--- a/net/minecraft/util/datafix/fixes/WorldGenSettings.java
+++ b/net/minecraft/util/datafix/fixes/WorldGenSettings.java
@@ -67,18 +67,36 @@
          dynamic = func_241322_a_(p_233426_0_, i);
       } else {
          String lvt_8_1_ = optional.get();
-         switch(lvt_8_1_) {
-         case "flat":
+         byte lvt_9_1_ = -1;
+         switch(lvt_8_1_.hashCode()) {
+         case -1378118590:
+            if (lvt_8_1_.equals("buffet")) {
+               lvt_9_1_ = 2;
+            }
+            break;
+         case 3145593:
+            if (lvt_8_1_.equals("flat")) {
+               lvt_9_1_ = 0;
+            }
+            break;
+         case 1045526590:
+            if (lvt_8_1_.equals("debug_all_block_states")) {
+               lvt_9_1_ = 1;
+            }
+         }
+
+         switch(lvt_9_1_) {
+         case 0:
             OptionalDynamic<T> optionaldynamic = p_233426_0_.get("generatorOptions");
             Map<Dynamic<T>, Dynamic<T>> map = func_233430_a_(dynamicops, optionaldynamic);
             dynamic = p_233426_0_.createMap(ImmutableMap.of(p_233426_0_.createString("type"), p_233426_0_.createString("minecraft:flat"), p_233426_0_.createString("settings"), p_233426_0_.createMap(ImmutableMap.of(p_233426_0_.createString("structures"), p_233426_0_.createMap(map), p_233426_0_.createString("layers"), optionaldynamic.get("layers").result().orElseGet(() -> {
                return p_233426_0_.createList(Stream.of(p_233426_0_.createMap(ImmutableMap.of(p_233426_0_.createString("height"), p_233426_0_.createInt(1), p_233426_0_.createString("block"), p_233426_0_.createString("minecraft:bedrock"))), p_233426_0_.createMap(ImmutableMap.of(p_233426_0_.createString("height"), p_233426_0_.createInt(2), p_233426_0_.createString("block"), p_233426_0_.createString("minecraft:dirt"))), p_233426_0_.createMap(ImmutableMap.of(p_233426_0_.createString("height"), p_233426_0_.createInt(1), p_233426_0_.createString("block"), p_233426_0_.createString("minecraft:grass_block")))));
             }), p_233426_0_.createString("biome"), p_233426_0_.createString(optionaldynamic.get("biome").asString("minecraft:plains"))))));
             break;
-         case "debug_all_block_states":
+         case 1:
             dynamic = p_233426_0_.createMap(ImmutableMap.of(p_233426_0_.createString("type"), p_233426_0_.createString("minecraft:debug")));
             break;
-         case "buffet":
+         case 2:
             OptionalDynamic<T> optionaldynamic1 = p_233426_0_.get("generatorOptions");
             OptionalDynamic<?> optionaldynamic2 = optionaldynamic1.get("chunk_generator");
             Optional<String> optional2 = optionaldynamic2.get("type").asString().result();
@@ -158,42 +176,101 @@
                   String s2 = p_233428_7_.asString("");
                   if ("stronghold".equals(s)) {
                      mutableboolean.setTrue();
-                     switch(s1) {
-                     case "distance":
+                     byte b1 = -1;
+                     switch(s1.hashCode()) {
+                     case -895684237:
+                        if (s1.equals("spread")) {
+                           b1 = 1;
+                        }
+                        break;
+                     case 94851343:
+                        if (s1.equals("count")) {
+                           b1 = 2;
+                        }
+                        break;
+                     case 288459765:
+                        if (s1.equals("distance")) {
+                           b1 = 0;
+                        }
+                     }
+
+                     switch(b1) {
+                     case 0:
                         mutableint.setValue(func_233435_a_(s2, mutableint.getValue(), 1));
                         return;
-                     case "spread":
+                     case 1:
                         mutableint1.setValue(func_233435_a_(s2, mutableint1.getValue(), 1));
                         return;
-                     case "count":
+                     case 2:
                         mutableint2.setValue(func_233435_a_(s2, mutableint2.getValue(), 1));
                         return;
                      default:
                      }
                   } else {
-                     switch(s1) {
-                     case "distance":
-                        switch(s) {
-                        case "village":
+                     byte b0 = -1;
+                     switch(s1.hashCode()) {
+                     case -2116852922:
+                        if (s1.equals("separation")) {
+                           b0 = 1;
+                        }
+                        break;
+                     case -2012158909:
+                        if (s1.equals("spacing")) {
+                           b0 = 2;
+                        }
+                        break;
+                     case 288459765:
+                        if (s1.equals("distance")) {
+                           b0 = 0;
+                        }
+                     }
+
+                     switch(b0) {
+                     case 0:
+                        byte b2 = -1;
+                        switch(s.hashCode()) {
+                        case -1606796090:
+                           if (s.equals("endcity")) {
+                              b2 = 2;
+                           }
+                           break;
+                        case -107033518:
+                           if (s.equals("biome_1")) {
+                              b2 = 1;
+                           }
+                           break;
+                        case 460367020:
+                           if (s.equals("village")) {
+                              b2 = 0;
+                           }
+                           break;
+                        case 835798799:
+                           if (s.equals("mansion")) {
+                              b2 = 3;
+                           }
+                        }
+
+                        switch(b2) {
+                        case 0:
                            func_233436_a_(map, "minecraft:village", s2, 9);
                            return;
-                        case "biome_1":
+                        case 1:
                            func_233436_a_(map, "minecraft:desert_pyramid", s2, 9);
                            func_233436_a_(map, "minecraft:igloo", s2, 9);
                            func_233436_a_(map, "minecraft:jungle_pyramid", s2, 9);
                            func_233436_a_(map, "minecraft:swamp_hut", s2, 9);
                            func_233436_a_(map, "minecraft:pillager_outpost", s2, 9);
                            return;
-                        case "endcity":
+                        case 2:
                            func_233436_a_(map, "minecraft:endcity", s2, 1);
                            return;
-                        case "mansion":
+                        case 3:
                            func_233436_a_(map, "minecraft:mansion", s2, 1);
                            return;
                         default:
                            return;
                         }
-                     case "separation":
+                     case 1:
                         if ("oceanmonument".equals(s)) {
                            WorldGenSettings.StructureSeparationSettingsCodec worldgensettings$structureseparationsettingscodec = map.getOrDefault("minecraft:monument", field_233422_a_.get("minecraft:monument"));
                            int i = func_233435_a_(s2, worldgensettings$structureseparationsettingscodec.field_233444_c_, 1);
@@ -201,7 +278,7 @@
                         }
 
                         return;
-                     case "spacing":
+                     case 2:
                         if ("oceanmonument".equals(s)) {
                            func_233436_a_(map, "minecraft:monument", s2, 1);
                         }
